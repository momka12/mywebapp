<?xml version="1.0" encoding="UTF-8"?>
<b:beans xmlns="http://www.springframework.org/schema/security"
         xmlns:b="http://www.springframework.org/schema/beans"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <http auto-config="true" use-expressions="true" create-session="never" pattern="/rest**">
        <intercept-url pattern="/users**" access="ROLE_REST"/>
    </http>

    <http auto-config="true" use-expressions="true">
        <intercept-url pattern="/users" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/users/**" access="hasRole('ROLE_USER') OR hasRole('ROLE_ADMIN')"/>
    </http>

    <authentication-manager>
        <!--<authentication-provider>-->
        <!--<user-service>-->
        <!--<user name="rest" password="123" authorities="ROLE_REST" />-->
        <!--<user name="admin" password="123" authorities="ROLE_ADMIN" />-->
        <!--<user name="user" password="123" authorities="ROLE_USER" />-->
        <!--</user-service>-->
        <!--</authentication-provider>-->

        <authentication-provider>
            <jdbc-user-service data-source-ref="dataSource"

                               users-by-username-query="
         SELECT users.name, users.password, users.enabled
         FROM users
         WHERE users.name=?;"

                               authorities-by-username-query="
SELECT users.name, roles.name
FROM users
JOIN roles_users ON users.id = roles_users.users_id
JOIN roles ON roles_users.roles_id = roles.id
WHERE users.name = ?;"

            />
        </authentication-provider>
    </authentication-manager>

</b:beans>